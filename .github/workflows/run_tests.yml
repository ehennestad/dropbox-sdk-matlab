name: Run tests

on:
  # Triggers the workflow on push or pull request events for the "main" branch
  push:
    branches: [ "main" ]
    paths-ignore:
      - '*.md'
      - '.github/**'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '*.md'
      - '.github/**'

  # Allows for manually running this workflow from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test toolbox code
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Start virtual display server (for tests with progress bar)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y xvfb
          Xvfb :99 &
          echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2

      - name: Install MatBox
        uses: ehennestad/matbox/.github/actions/install-matbox@v0.9

      - name: Check code and upload report
        uses: ehennestad/matbox/.github/actions/check-code@v0.9
        with:
          code_directory: 'code'
      
      # Runs all tests in the project.
      - name: Run tests
        uses: matlab-actions/run-command@v2
        if: always()
        env:
          DropboxApiRefreshToken: ${{ secrets.DROPBOX_API_REFRESH_TOKEN }}
        with:
          command: addpath(genpath("tools")), testToolbox()

      - name: Commit SVG badges if updated
        if: always() && ( github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository )
        uses: ehennestad/matbox/.github/actions/push-badges@v0.9
        with:
          pr-ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || github.ref_name }}
          pr-repo: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name || github.repository }}

      - name: Upload code coverage report to Codecov
        uses: codecov/codecov-action@v4
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: docs/reports/codecoverage.xml
          
      # Publish test results
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: "docs/reports/test-results.xml"
          
      # Save the contents of the reports directory as an artifact
      - name: Save Reports Directory
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: reports
          path: docs/reports
